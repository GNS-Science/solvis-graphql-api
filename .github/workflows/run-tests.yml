name: Run Tests 

#https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow

on:
  workflow_call:

jobs:
  run_unit_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        python-versions: [3.9]
        os: [ubuntu-latest]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install and configure Poetry
        uses: GNS-Science/install-poetry@main
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root --with dev --all-extras
          poetry add tox-gh-actions

      - name: test with tox (uses tox-gh-actions to select correct environment)
        run:
          poetry run tox

      - name: list files
        run: ls -l .

      - name: Submit coverage report if this is Linux
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
